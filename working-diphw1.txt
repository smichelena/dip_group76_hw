 // TO DO !!!
    //ill try to convert the image to greyscale by applying the point transform 
    // f(r,g,b) = (r+g+b)/3 (given 3 channels ofc)
    
    std::cout << " matrix channels " << img.channels() << std::endl;
    std::cout << " matrix columns " << img.cols << std::endl;
    std::cout << " matrix rows " << img.rows << std::endl;
    std::cout << " data type in matrix " <<  cv::typeToString(img.type()) << std::endl;
    std::cout << " single element of the matrix " << img.at<cv::Vec3b>(0,0) << std::endl;

    //create new single channel image
    cv::Mat output = cv::Mat(img.rows, img.cols, CV_32FC1);

    for (int x = 0; x < img.cols; x++){
        for (int y = 0; y < img.rows; y++){
            float greyValue = 0.0f;
            for (int i = 0; i < img.channels(); i++){
                greyValue += img.at<cv::Vec3b>(x,y)[i];
            }
            output.at<float>(x,y)  = (greyValue/3 >= 127) ? 255 : 0;
        }
    }

    return output;